<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統 - w6</title><link href="./" rel="alternate"></link><link href="./feeds/w6.atom.xml" rel="self"></link><id>./</id><updated>2024-06-14T15:06:00+08:00</updated><entry><title>2024 w6 課程</title><link href="./2024-Spring-w6-blog-tutorial.html" rel="alternate"></link><published>2024-06-14T15:06:00+08:00</published><updated>2024-06-14T08:43:44+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-06-14:./2024-Spring-w6-blog-tutorial.html</id><summary type="html">&lt;p&gt;如何透過與 ChatGPT 的對話, 了解有關 git 在不同專業領域的應用方法.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;如何透過與 ChatGPT 的對話, 了解有關 git 在不同專業領域的應用方法.&lt;/p&gt;


&lt;h1&gt;Git 歷史與希望解決的問題&lt;/h1&gt;
&lt;p&gt;Git 是一個分散式的版本控制系統，由 Linus Torvalds 於 2005 年創建。&lt;/p&gt;
&lt;p&gt;2005年：Linus Torvalds開始開發Git。&lt;/p&gt;
&lt;p&gt;2005年4月：Git的第一個版本（1.0）發布。&lt;/p&gt;
&lt;p&gt;2005 年至今：Git 的成長，吸引了全球開發者社群的關注與貢獻。&lt;/p&gt;
&lt;p&gt;2008年：GitHub成立，為Git提供了一個受歡迎的主機服務平台，讓開發者可以輕鬆分享和協作。&lt;/p&gt;
&lt;p&gt;2016年：微軟收購了GitHub，這項舉動在開源社群引起了一些爭議，但也為Git的發展提供了更多的資源和支援。&lt;/p&gt;
&lt;p&gt;2020 年：GitHub 宣布啟動程式碼移動計劃，計劃將所有專案的主要程式碼儲存庫轉移到遠端儲存庫。&lt;/p&gt;
&lt;p&gt;總的來說，Git 的發展歷史是一個開放和協作的過程，得益於全球開發者社群的不懈努力和貢獻。工具。&lt;/p&gt;
&lt;p&gt;git 創作者的相關履歷&lt;/p&gt;
&lt;p&gt;Git 的創造者是 Linux 核心的創建者 Linus Torvalds。&lt;/p&gt;
&lt;p&gt;Linus Torvalds 出生於 1969 年 12 月 28 日，從赫爾辛基大學畢業，主修電腦科學。&lt;/p&gt;
&lt;p&gt;在他的職業生涯中，Torvalds 曾就職於 Transmeta Corporation 和開源開發實驗室。&lt;/p&gt;
&lt;p&gt;Torvalds 以開放、直率和自由的風格而聞名，他在 Linux 核心和 Git 專案的過程中始終堅持維護這一風格。&lt;/p&gt;
&lt;h1&gt;請問git如何在Master CAM應用&lt;/h1&gt;
&lt;p&gt;Git在機械設計專業中的應用通常不是直接與Master CAM（一種用於電腦輔助製造的軟體）集成，而是在開發流程中用於版本控制和協作。的情況：&lt;/p&gt;
&lt;p&gt;版本控制：機械設計過程中會產生大量的CAD（電腦輔助設計）檔案、製造程式等。使得團隊成員可以同步工作，而不必擔心文件的覆蓋或遺失。&lt;/p&gt;
&lt;p&gt;協作：Git 可以使團隊成員能夠同時進行機械設計專案的協作 他們可以在本地工作，然後透過 Git 將他們的主動更改到共享的遠端儲存庫中。在同一個頁面上工作。&lt;/p&gt;
&lt;p&gt;分支管理：Git 的分支功能使得可以輕鬆地建立新的功能分支或修復分支，而不影響主要的開發分支。&lt;/p&gt;
&lt;p&gt;程式碼審查：即使在機械設計中，程式碼審查也是一個步驟。&lt;/p&gt;
&lt;p&gt;總的來說，雖然 Git 不是直接與 Master CAM 整合的工具，但它可以作為機械設計專業中的一個強大的版本控制和協作工具，幫助團隊更有效地進行工作。&lt;/p&gt;
&lt;p&gt;2.假設要在Windows實際示範git客戶端與git伺服器，如何進行？&lt;/p&gt;
&lt;p&gt;安裝Git客戶端：&lt;/p&gt;
&lt;p&gt;首先，你需要在 Windows 上安裝 Git 用戶端。
設定Git客戶端：&lt;/p&gt;
&lt;p&gt;安裝完成後，開啟Git Bash或Git命令提示字符，設定使用者名稱和電子郵件地址
設定Git伺服器：&lt;/p&gt;
&lt;p&gt;如果你想在本機上搭建一個 Git 伺服器，你可以使用 Git 內建的git daemon工具。
建立本機儲存庫：&lt;/p&gt;
&lt;p&gt;使用 Git 用戶端，在您的本機系統中建立一個新的 Git 儲存庫。目錄，然後執行
連接到Git伺服器：&lt;/p&gt;
&lt;p&gt;在本機儲存庫中，新增終端伺服器的連結git://localhost/yourrepo.git。
股東和拉取變更：&lt;/p&gt;
&lt;p&gt;現在您已經設定了本地儲存庫和外部伺服器器的鏈接，您可以使用 Git 客戶端來啟動您的變更到伺服器器，或從伺服器器拉取別人的變更。
透過這些步驟，你可以在 Windows 上示範如何設定 Git 用戶端和伺服器，以及如何在它們之間進行通訊。&lt;/p&gt;
&lt;h1&gt;從 git init 到 git push&lt;/h1&gt;
&lt;p&gt;啟動近端可攜程式系統&lt;/p&gt;
&lt;p&gt;更換目錄至 y:\tmp 分別建立 gitproject\repository 與 gitserver\repository 目錄&lt;/p&gt;
&lt;p&gt;利用以下指令, 設定之後的 git init 將採用 main 作為內定主分支&lt;/p&gt;
&lt;p&gt;在 Y:\tmp\gitproject&amp;gt; git config --global init.defaultBranch main&lt;/p&gt;
&lt;p&gt;進入 gitproject\repository 目錄, 新增一個目錄名稱為 repo1, 進入 repo1 後執行 git init&lt;/p&gt;
&lt;p&gt;進入 gitserver\repository 目錄, 新增一個目錄名稱為 repo1, 進入 repo1 後執行 git init --bare&lt;/p&gt;
&lt;p&gt;之後在 Y:\tmp\gitproject\repo1 目錄操作, 建立新檔案 README.md:&lt;/p&gt;
&lt;p&gt;echo "Hello, World!" &amp;gt; README.md&lt;/p&gt;
&lt;p&gt;git add README.md&lt;/p&gt;
&lt;p&gt;git commit -m "Initial commit"&lt;/p&gt;
&lt;p&gt;git remote add origin y:\tmp\gitserver\repository\repo1&lt;/p&gt;
&lt;p&gt;git push -u origin main&lt;/p&gt;
&lt;p&gt;如此, 就可以將 Y:\tmp\gitproject\repo1 中的倉儲內容送到 Y:\tmp\gitserver\repository\repo1 目錄中. 之後請在 C:\tmp\repository&amp;gt; 執行 git clone Y:\tmp\gitserver\repository\repo1, 由於沒有特別指令倉儲 clone 後的目錄名稱, 因此 git 會將 Y:\tmp\gitserver\repository\repo1 倉儲內容複製一份放入 C:\tmp\repository\repo1 目錄中.&lt;/p&gt;
&lt;p&gt;表示目前 Y:\tmp\gitserver\repository\repo1 伺服器中的 repo1, 已經分別存入 Y:\tmp\gitproject\repo1 與 C:\tmp\repository\repo1 目錄中, 使用者可以分別在這兩個倉儲中進行改版後, 在各自的倉儲資料中進行提交, 隨後再設法將改版內容 push 到 Y:\tmp\gitserver\repository\repo1 中進行合併.&lt;/p&gt;
&lt;p&gt;最後, 若要讓使用者跨網路存取 Windows 操作系統上的倉儲, 可以根據這裡的說明, 啟動伺服器:&lt;/p&gt;
&lt;p&gt;git daemon --reuseaddr --base-path=. --export-all --verbose&lt;/p&gt;
&lt;p&gt;然後利用 C:\tmp\repository&amp;gt;git clone git://localhost/repo1 repo002 取下倉儲內容, 其中的 localhost 可以使用外部 IP 或對應的網路符號名稱.&lt;/p&gt;
&lt;p&gt;若要在 Windows 環境打造一個類似 Github 的網際環境, 可以採用 https://github.com/gogs/gogs, 其中包括網際資料庫 PostgreSQL 伺服器或 SQLite 的應用.&lt;/p&gt;</content><category term="w6"></category><category term="網誌編寫"></category></entry></feed>